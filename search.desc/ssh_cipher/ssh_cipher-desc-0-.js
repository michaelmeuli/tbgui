searchState.loadedDescShard("ssh_cipher", 0, "RustCrypto: SSH Symmetric Ciphers\nAES-128 in cipher block chaining (CBC) mode.\nAES-128 in counter (CTR) mode.\nAES-128 in Galois/Counter Mode (GCM).\nAES-192 in cipher block chaining (CBC) mode.\nAES-192 in counter (CTR) mode.\nAES-256 in cipher block chaining (CBC) mode.\nAES-256 in counter (CTR) mode.\nAES-256 in Galois/Counter Mode (GCM).\nChaCha20-Poly1305\nCipher algorithms.\nCryptographic errors.\nContains the error value\nError type.\nInvalid initialization vector / nonce size.\nInvalid key size.\nNonce for AEAD modes.\nNo cipher.\nContains the success value\nResult type with <code>ssh-cipher</code> crate’s <code>Error</code> as the error …\nTripleDES in block chaining (CBC) mode\nAuthentication tag for ciphertext data.\nInvalid AEAD tag size.\nUnsupported cipher.\nGet the string identifier which corresponds to this …\nGet the block size for this cipher in bytes.\nDecrypt the ciphertext in the <code>buffer</code> in-place using this …\nEncrypt the ciphertext in the <code>buffer</code> in-place using this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDoes this cipher have an authentication tag? (i.e. is it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this cipher <code>none</code>?\nIs the cipher anything other than <code>none</code>?\nGet the key and IV size for this cipher in bytes.\nDecode cipher algorithm from the given <code>ciphername</code>.\nCompute the length of padding necessary to pad the given …")